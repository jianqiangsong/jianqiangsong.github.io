<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gemini`s wiki</title>
  
  <subtitle>Gemini</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-08-30T03:03:17.525Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Gemini</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Yii2 行为类</title>
    <link href="http://example.com/2023/08/28/yii/yii3/"/>
    <id>http://example.com/2023/08/28/yii/yii3/</id>
    <published>2023-08-28T08:00:04.000Z</published>
    <updated>2023-08-30T03:03:17.525Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="yii2-Behavior-行为的使用，代码示例"><a href="#yii2-Behavior-行为的使用，代码示例" class="headerlink" title="yii2 Behavior 行为的使用，代码示例"></a>yii2 Behavior 行为的使用，代码示例</h3><p>1.定义一个类继承行为基础类<br>2.实现event方法触发事件重写</p><p>如下是扩展模型Model的类方法 进行程序的解耦设计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">common</span>\<span class="title class_">behaviors</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Behavior</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BaseActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">UploadedFile</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 行为事件 测试类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> app\common\behaviors</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@class</span> AttachmentsBehavior</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-08-30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AttachmentsBehavior</span> <span class="keyword">extends</span> <span class="title">Behavior</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_files</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 需要上传的文件属性</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$uploadFiles</span> = <span class="string">&#x27;uploadfiles&#x27;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已经上传了的文件属性</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$uploadedFiles</span> = <span class="string">&#x27;uploadedfiles&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$savePath</span> = <span class="string">&#x27;@common/upload&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 访问路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$saveUrl</span> = <span class="string">&#x27;@common/uploads&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">events</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="title class_">BaseActiveRecord</span>::<span class="variable constant_">EVENT_BEFORE_VALIDATE</span> =&gt; <span class="string">&#x27;beforeValidate&#x27;</span>,</span><br><span class="line">            <span class="title class_">BaseActiveRecord</span>::<span class="variable constant_">EVENT_AFTER_VALIDATE</span> =&gt; <span class="string">&#x27;beforeValidate1&#x27;</span>,</span><br><span class="line">            <span class="title class_">BaseActiveRecord</span>::<span class="variable constant_">EVENT_AFTER_INSERT</span> =&gt; <span class="string">&#x27;afterSave&#x27;</span>,</span><br><span class="line">            <span class="title class_">BaseActiveRecord</span>::<span class="variable constant_">EVENT_AFTER_UPDATE</span> =&gt; <span class="string">&#x27;afterSave&#x27;</span>,</span><br><span class="line">            <span class="title class_">BaseActiveRecord</span>::<span class="variable constant_">EVENT_BEFORE_DELETE</span> =&gt; <span class="string">&#x27;beforeDelete&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * This method is invoked before validation starts.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">beforeValidate1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_files = <span class="title class_">UploadedFile</span>::<span class="title function_ invoke__">getInstances</span>(<span class="variable">$this</span>-&gt;owner, <span class="variable">$this</span>-&gt;uploadFiles);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回拥有者的唯一Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getIdentityId</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;owner-&gt;<span class="title function_ invoke__">className</span>() . <span class="string">&#x27;.&#x27;</span> . <span class="variable language_">$this</span>-&gt;owner-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 明确拥有者与附件的关系</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAttachments</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;owner-&gt;<span class="title function_ invoke__">hasMany</span>(<span class="title class_">Attachments</span>::<span class="title function_ invoke__">className</span>(), [<span class="string">&#x27;ownerId&#x27;</span> =&gt; <span class="string">&#x27;identityId&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在主模型保存后挨个保存附件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">afterSave</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;_files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable">$model</span> = <span class="keyword">new</span> <span class="title class_">Attachments</span>();</span><br><span class="line">            <span class="variable">$model</span>-&gt;fileName = <span class="variable">$file</span>-&gt;name;</span><br><span class="line">            <span class="variable">$model</span>-&gt;url = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Ymd&#x27;</span>) . <span class="title class_">\Yii</span>::<span class="variable">$app</span>-&gt;<span class="title function_ invoke__">getSecurity</span>()-&gt;<span class="title function_ invoke__">generateRandomString</span>(<span class="number">8</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>-&gt;extension;</span><br><span class="line">            <span class="variable">$model</span>-&gt;ownerId = <span class="variable language_">$this</span>-&gt;owner-&gt;identityId;</span><br><span class="line">            <span class="variable">$model</span>-&gt;savePath = <span class="title class_">\Yii</span>::<span class="title function_ invoke__">getAlias</span>(<span class="variable">$this</span>-&gt;savePath);</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">saveAs</span>(<span class="title class_">\Yii</span>::<span class="title function_ invoke__">getAlias</span>(<span class="variable">$this</span>-&gt;savePath) . DIRECTORY_SEPARATOR . <span class="variable">$model</span>-&gt;url);</span><br><span class="line">            <span class="variable">$model</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在主模型删除之前删除所有附件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">beforeDelete</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;owner-&gt;&#123;<span class="variable language_">$this</span>-&gt;uploadedFiles&#125; <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">delete</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2023-08-30</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFilesUrl</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">\Yii</span>::<span class="title function_ invoke__">getAlias</span>(<span class="variable">$this</span>-&gt;saveUrl) . DIRECTORY_SEPARATOR . <span class="variable">$url</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="yii" scheme="http://example.com/categories/php/yii/"/>
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
    <category term="yii" scheme="http://example.com/tags/yii/"/>
    
  </entry>
  
  <entry>
    <title>备忘录</title>
    <link href="http://example.com/2023/08/24/test/pass/"/>
    <id>http://example.com/2023/08/24/test/pass/</id>
    <published>2023-08-24T01:24:14.000Z</published>
    <updated>2023-08-24T01:26:59.944Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>备份记录<br><code>oopdingtalk.com &#39;Jinx525617 #123&#39;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="生活" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="备忘录" scheme="http://example.com/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>博客构建同步仓库</title>
    <link href="http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/hexo/"/>
    <id>http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/hexo/</id>
    <published>2023-08-16T00:53:39.000Z</published>
    <updated>2023-08-16T00:58:23.819Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>使用国内访问源快速 vercel静态托管</code></p><hr><p>1.仓库地址<a href="https://vercel.com/jianqiangsong/blog">https://vercel.com/jianqiangsong/blog</a></p><hr><p>2.访问地址<a href="https://blog-jianqiangsong.vercel.app/">同步博客地址 https://blog-jianqiangsong.vercel.app</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="hexo" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/hexo/"/>
    
    
    <category term="博客构建" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>openai 图片使用demo</title>
    <link href="http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/openai/"/>
    <id>http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/openai/</id>
    <published>2023-08-16T00:44:03.000Z</published>
    <updated>2023-08-16T00:58:51.837Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>openiakey: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</code></p><p><code>生成图片，使用代理访问的openai</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">curl https://api.openai-proxy.com/v1/images/generations \</span><br><span class="line"> -H &quot;Content-Type: application/json&quot; \</span><br><span class="line"> -H &quot;Authorization: Bearer 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&quot; \</span><br><span class="line"> -d &#x27;&#123;</span><br><span class="line">   &quot;prompt&quot;: &quot;生成一张小王八的照片&quot;,</span><br><span class="line">   &quot;n&quot;: 2,</span><br><span class="line">   &quot;size&quot;: &quot;256x256&quot;</span><br><span class="line"> &#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="openai" scheme="http://example.com/categories/openai/"/>
    
    <category term="大语言模型" scheme="http://example.com/categories/openai/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="openai" scheme="http://example.com/tags/openai/"/>
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="http://example.com/2023/08/08/php/%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2023/08/08/php/%E5%87%BD%E6%95%B0/</id>
    <published>2023-08-08T01:37:23.000Z</published>
    <updated>2023-08-08T02:08:19.833Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>发现一个比较好用容易忽略的函数</code></p><p><code>get_headers</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断一个地址是否可以访问 </span></span><br><span class="line"><span class="comment">//302 状态码代表重定向</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">$arr</span> = <span class="title function_ invoke__">get_headers</span>(<span class="string">&#x27;https://test-open.zking.com/dz/1Msvv137&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//响应结果，可以通过content-length 判断 </span></span><br><span class="line"> <span class="title function_ invoke__">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; HTTP/<span class="number">1.1</span> <span class="number">302</span> Found</span><br><span class="line">    [Server] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; ******</span><br><span class="line">            [<span class="number">1</span>] =&gt; ******</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [Content-Length] =&gt; <span class="number">0</span></span><br><span class="line">    [Connection] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; close</span><br><span class="line">            [<span class="number">1</span>] =&gt; close</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [location] =&gt; <span class="attr">https</span>://test-open.zking.com/api/v1/insurance/nonAutoMobile/getpolicyDownload/<span class="number">21122253410023000009</span></span><br><span class="line">    [date] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; Tue, <span class="number">08</span> Aug <span class="number">2023</span> <span class="number">01</span>:<span class="number">52</span>:<span class="number">24</span> GMT</span><br><span class="line">            [<span class="number">1</span>] =&gt; Tue, <span class="number">08</span> Aug <span class="number">2023</span> <span class="number">01</span>:<span class="number">52</span>:<span class="number">25</span> GMT</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [x-envoy-upstream-service-time] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; <span class="number">81</span></span><br><span class="line">            [<span class="number">1</span>] =&gt; <span class="number">1442</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [Set-Cookie] =&gt; <span class="title function_ invoke__">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; hvAJjymUYBa3O=<span class="number">60</span>Tt1N123.awkhkof7ofH3MhYWigGg6G0q12mi2Pc4QhKnBw5gWoZvGiQd5pxELY81iyYE6YcTHQ8LLwiyHCHkVA; Path=/; expires=Fri, <span class="number">05</span> Aug <span class="number">2033</span> <span class="number">01</span>:<span class="number">52</span>:<span class="number">19</span> GMT; Secure; HttpOnly</span><br><span class="line">            [<span class="number">1</span>] =&gt; hvAJjymUYBa3O=<span class="number">60</span>Kb23jk82hM1gsG2k2MF54_7K.PDdJPJTGBuC7VHqCO_tps6JCbWBAvIx7x_FPDw9gbkXICkvy9qlYQWrTP2Jva; Path=/; expires=Fri, <span class="number">05</span> Aug <span class="number">2033</span> <span class="number">01</span>:<span class="number">52</span>:<span class="number">20</span> GMT; Secure; HttpOnly</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span>] =&gt; HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">    [Content-Type] =&gt; application/octet-stream;charset=UTF-<span class="number">8</span></span><br><span class="line">    [pragma] =&gt; <span class="keyword">public</span></span><br><span class="line">    [expires] =&gt; <span class="number">0</span></span><br><span class="line">    [cache-control] =&gt; must-revalidate, post-check=<span class="number">0</span>, pre-check=<span class="number">0</span></span><br><span class="line">    [content-disposition] =&gt; attachment;filename=<span class="number">21122253410023000009</span>.pdf</span><br><span class="line">    [x-kong-upstream-latency] =&gt; <span class="number">1437</span></span><br><span class="line">    [x-kong-proxy-latency] =&gt; <span class="number">5</span></span><br><span class="line">    [via] =&gt; kong/<span class="number">2.5</span>.<span class="number">2</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="基础" scheme="http://example.com/categories/php/%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
    <category term="函数 get_headers" scheme="http://example.com/tags/%E5%87%BD%E6%95%B0-get-headers/"/>
    
  </entry>
  
  <entry>
    <title>yii2</title>
    <link href="http://example.com/2023/07/28/yii/yii2/"/>
    <id>http://example.com/2023/07/28/yii/yii2/</id>
    <published>2023-07-28T08:00:04.000Z</published>
    <updated>2023-08-30T01:49:10.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>yii2 干货知识集合</p><p><code>https://github.com/forecho/awesome-yii2</code></p><p><a href="https://github.com/forecho/awesome-yii2">链接地址</a></p><p>件一共有15个与加密解密（&amp;编码）相关的公共方法</p></p><ol><li>encryptByPassword</li><li>encryptByKey</li><li>decryptByPassword</li><li>decryptByKey</li><li>hkdf</li><li>pbkdf2</li><li>hashData</li><li>validateData</li><li>generateRandomKey</li><li>generateRandomString</li><li>generatePasswordHash</li><li>validatePassword</li><li>compareString</li><li>maskToken</li><li>unmaskToken</li></ol><p>我想有一些你一定没见过，没关系，我们一一去了解。</p><h2>generateRandomString</h2><p>之所以先说<strong>generateRandomString</strong>是因为它最常用，起码我是这样。</p><pre><code class="php">public function generateRandomString($length = 32)&#123;...&#125;</code></pre><p>生成一个随机的字符串，参数$length代表这个字符串的长度，默认32位。值得说明的是这个字符串的取值为范围是[A-Za-z0-9_-]。</p><h2>generatePasswordHash &amp; validatePassword</h2><p>generatePasswordHash &amp; validatePassword经常被用来加密用户密码以及对密码是否正确的验证，自从MD5可能被碰撞后，我们用yii2开发应用的时候，generatePasswordHash函数对密码进行加密就成为首选了，它调用了crypt函数。</p><p>一般用法如下</p><pre><code class="php">// 使用generatePasswordHash为用户的密码加密，$hash存储到库中$hash = Yii::$app-&gt;getSecurity()-&gt;generatePasswordHash($password);<p>&#x2F;&#x2F; 使用validatePassword对密码进行验证<br>if(Yii::$app-&gt;getSecurity()-&gt;validatePassword($password, $hash))&#123;<br>&#x2F;&#x2F; 密码正确<br>&#125;else&#123;<br>&#x2F;&#x2F; 密码错误<br>&#125;</code></pre></p><h2>generateRandomKey</h2><p>和<strong>generateRandomString</strong>类似，生成一个随机的串，参数为长度，默认为32位，区别在于<strong>generateRandomKey</strong>生成的不是ASCII。</p><p>简单的说 <strong>generateRandomString</strong> 约等于 base64_encode(<strong>generateRandomKey</strong>)。</p><h2>encryptByPassword &amp; decryptByPassword</h2><p>编码和解码函数，使用一个秘钥对数据进行编码，然后通过此秘钥在对编码后的数据进行解码。</p><p>例子</p><pre><code class="php">$dat = Yii::$app-&gt;security-&gt;encryptByPassword("hello","3166886");echo Yii::$app-&gt;security-&gt;encryptByPassword($dat,"3166886");// hello</code></pre><p><strong>要注意，通过上面得到的编码后的数据不是ASCII，可以通过base64_encode和base64_decode在外层包装下。</strong></p><h2>encryptByKey &amp;  decryptByKey</h2><p>同样是一组编码和解码函数，比通过密码的方式要快。函数声明为</p><pre><code class="php">public function encryptByKey($data, $inputKey, $info = null)&#123;&#125;<p>public function decryptByKey($data, $inputKey, $info &#x3D; null)&#123;&#125;</code></pre></p><p>encryptByKey &amp;  decryptByKey 存在着第三个参数，比如我们可以传递会员的ID等，这样此信息将和$inputKey一起作为加密解密的钥匙。</p><h2>hkdf</h2><p><strong>使用标准的 HKDF 算法从给定的输入键中导出一个键。</strong>在PHP7+使用的是hash_hkdf方法，小于PHP7使用hash_hmac方法。</p><h2>pbkdf2</h2><p>使用标准的 PBKDF2 算法从给定的密码导出一个密钥。该方法可以用来进行密码加密，不过yii2有更好的密码加密方案 <strong>generatePasswordHash</strong>。</p><h2>hashData和validateData</h2><p>有的时候为了防止内容被篡改，我们需要对数据进行一些标记，hashData和validateData就是完成这个任务的组合。</p><p><strong>hashData</strong> 用来对原始数据进行<strong>加数据前缀</strong>，比如如下代码</p><pre><code class="php">$result = Yii::$app-&gt;security-&gt;hashData("hello",'123456',false);// ac28d602c767424d0c809edebf73828bed5ce99ce1556f4df8e223faeec60eddhello</code></pre><p>你看到了在hello的前面多了一组字符，这组字符会随着原始数据的不同而变化。这样我们就对数据进行了特殊的防止篡改标记，接下来是validateData上场了。</p><p>注意：hashData的第三个参数代表生成的哈希值是否为原始二进制格式. 如果为<code>false</code>, 则会生成小写十六进制数字.</p><p><strong>validateData</strong> 对已经加了数据前缀的数据进行检测，如下代码</p><pre><code class="php">$result = Yii::$app-&gt;security-&gt;validateData("ac28d602c767424d0c809edebf73828bed5ce99ce1556f4df8e223faeec60eddhello",'123456',false);// hello</code></pre><p>如果返回了原始的字符串则表示验证通过，否则会返回假。</p><p>validateData 函数的第三个参数应该与使用  <strong>hashData()</strong> 生成数据时的值相同. 它指示数据中的散列值是否是二进制格式. 如果为<code>false</code>, 则表示散列值仅由小写十六进制数字组成. 将生成十六进制数字.</p><h2>compareString</h2><p>可防止时序攻击的字符串比较，用法非常简单。</p><pre><code class="php">Yii::$app-&gt;security-&gt;compareString("abc",'abc');</code></pre><p>结果为真则相等，否则不相等。</p><p>那么什么是时序攻击那？我来举一个简单的例子。</p><pre><code class="php">if($code == Yii::$app-&gt;request-&gt;get('code'))&#123;<p>&#125;</code></pre></p><p>上面的比较逻辑，两个字符串是从第一位开始逐一进行比较的，发现不同就立即返回 false，那么通过计算返回的速度就知道了大概是哪一位开始不同的，这样就实现了电影中经常出现的按位破解密码的场景。</p><p>而使用 compareString 比较两个字符串，无论字符串是否相等，函数的时间消耗是恒定的，这样可以有效的防止时序攻击。</p><h2>maskToken &amp;&amp; unmaskToken</h2><p>maskToken用于掩盖真实token且不可以压缩，同一个token最后生成了不同的随机令牌，在yii2的csrf功能上就使用了maskToken，原理并不复杂，我们看下源码。</p><pre><code class="php">public function maskToken($token)&#123;    $mask = $this-&gt;generateRandomKey(StringHelper::byteLength($token));    return StringHelper::base64UrlEncode($mask . ($mask ^ $token));&#125;</code></pre><p>而unmaskToken目的也很明确，用于得到被maskToken掩盖的token。</p><p>接下来我们看一个例子代码</p><pre><code class="php">$token = Yii::$app-&gt;security-&gt;maskToken("123456");echo Yii::$app-&gt;security-&gt;unmaskToken($token);// 结果为 123456</code></pre><p>最后我们总结下</p><ul><li>加密/解密: encryptByKey()、decryptByKey()、 encryptByPassword() 和 decryptByPassword()；</li><li>使用标准算法的密钥推导: pbkdf2() 和 hkdf();</li><li>防止数据篡改: hashData() 和 validateData();</li><li>密码验证: generatePasswordHash() 和 validatePassword()</li>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="yii" scheme="http://example.com/categories/php/yii/"/>
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
    <category term="yii" scheme="http://example.com/tags/yii/"/>
    
  </entry>
  
  <entry>
    <title>ioc</title>
    <link href="http://example.com/2023/07/21/php/ioc/"/>
    <id>http://example.com/2023/07/21/php/ioc/</id>
    <published>2023-07-21T01:29:46.000Z</published>
    <updated>2023-07-21T01:34:43.237Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="依赖注入和控制反转"><a href="#依赖注入和控制反转" class="headerlink" title="依赖注入和控制反转"></a>依赖注入和控制反转</h4><p>1.<a href="https://learnku.com/articles/65557">参考</a><br>2.<a href="https://learnku.com/laravel/t/2104/understanding-dependency-injection-and-inversion-of-control">参考2</a></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><p>其实 IoC&#x2F;DI 对编程带来的最大改变不是从代码上，而是从思想上，发生了「主从换位」的变化。应用程序原本是老大，要获取什么资源都是主动出击，但是在 IoC&#x2F;DI 思想中，应用程序就变成被动的了，被动的等待 IoC&#x2F;DI 容器来创建并注入它所需要的资源了。</p><p>这么小小的一个改变其实是编程思想的一个大进步，这样就有效的分离了对象和它所需要的外部资源，使得它们松散耦合，有利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="基础" scheme="http://example.com/categories/php/%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="ioc" scheme="http://example.com/tags/ioc/"/>
    
    <category term="di" scheme="http://example.com/tags/di/"/>
    
  </entry>
  
  <entry>
    <title>外链文章</title>
    <link href="http://example.com/2023/07/20/%E5%B7%A5%E5%85%B7/link/"/>
    <id>http://example.com/2023/07/20/%E5%B7%A5%E5%85%B7/link/</id>
    <published>2023-07-20T08:31:45.000Z</published>
    <updated>2023-08-29T09:59:15.024Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>第三方外链</code></p><p><a href="http://easy-tips.tigerb.cn/">easy-tips</a></p><p><a href="https://github.com/samdark">yii2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="基础" scheme="http://example.com/categories/php/%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="外链" scheme="http://example.com/tags/%E5%A4%96%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>yii 请求头</title>
    <link href="http://example.com/2023/07/19/yii/yii/"/>
    <id>http://example.com/2023/07/19/yii/yii/</id>
    <published>2023-07-19T05:58:15.000Z</published>
    <updated>2023-07-19T06:06:08.165Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>平时不怎么注意到的问题， yii 模拟请求表单提交 数据json字符串 php://input 也能接受参数 实际查看debug传参是当作整个json 当作key内容 代码</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//curl 代码 模拟客户端请求</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="variable">$data</span> = [<span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;周伯通&#x27;</span>, <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;sign&#x27;</span> =&gt; <span class="string">&#x27;asdfg123456&#x27;</span>];</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;sjqfront.com/bid_v3/qingjian/apply&#x27;</span>;</span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(); <span class="comment">//初始化curl</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);<span class="comment">//设置链接</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="comment">//设置是否返回信息</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span>);<span class="comment">//设置为POST方式</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="keyword">array</span>(<span class="string">&#x27;Content-type: application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>));<span class="comment">//设置为POST方式</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>));<span class="comment">//POST数据</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_USERAGENT, <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>);</span><br><span class="line"><span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);<span class="comment">//接收返回信息</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">curl_errno</span>(<span class="variable">$ch</span>)) &#123;<span class="comment">//出错则显示错误信息</span></span><br><span class="line">    <span class="keyword">print</span> <span class="title function_ invoke__">curl_error</span>(<span class="variable">$ch</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>); <span class="comment">//关闭curl链接</span></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;1.txt&#x27;</span>,<span class="variable">$response</span>,FILE_APPEND);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// yii响应头默认 text/html</span></span><br><span class="line"><span class="variable">$r</span> = <span class="title class_">\Yii</span>::<span class="variable">$app</span>-&gt;request-&gt;<span class="title function_ invoke__">getRawBody</span>();</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">json_decode</span>(<span class="variable">$r</span>,<span class="literal">true</span>));</span><br><span class="line"><span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="yii" scheme="http://example.com/categories/php/yii/"/>
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
    <category term="yii" scheme="http://example.com/tags/yii/"/>
    
  </entry>
  
  <entry>
    <title>装修</title>
    <link href="http://example.com/2023/07/18/%E7%94%9F%E6%B4%BB/%E8%A3%85%E4%BF%AE/"/>
    <id>http://example.com/2023/07/18/%E7%94%9F%E6%B4%BB/%E8%A3%85%E4%BF%AE/</id>
    <published>2023-07-18T07:49:03.000Z</published>
    <updated>2023-09-06T09:39:15.816Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><table><thead><tr><th>房贷</th><th>租房</th><th>生活费</th><th>-</th><th>-</th></tr></thead><tbody><tr><td>1900</td><td>2000</td><td>2000</td><td>-</td><td>-</td></tr></tbody></table><h3 id="装修完后-·家具-："><a href="#装修完后-·家具-：" class="headerlink" title="装修完后 ·家具 ："></a>装修完后 ·家具 ：</h3><table><thead><tr><th>家具名称</th><th>家电品牌</th><th>类型</th><th>预算价钱</th><th>实际价钱</th></tr></thead><tbody><tr><td>主卧床</td><td>-</td><td>大床(2*1.8)</td><td>3500</td><td></td></tr><tr><td>次卧床</td><td>-</td><td>大床(1.8*1.8)</td><td>2500</td><td></td></tr><tr><td>窗帘</td><td>-</td><td>三个卧室 + 客厅阳台</td><td>1500</td><td></td></tr><tr><td>空调</td><td>格力&#x2F;美的</td><td>主卧 + 次卧</td><td>4000</td><td></td></tr><tr><td>电视机</td><td>夏普</td><td>客厅</td><td>4000</td><td></td></tr><tr><td>沙发</td><td>-</td><td>客厅</td><td>5000</td><td></td></tr><tr><td>餐桌</td><td>-</td><td>餐厅(8人桌)</td><td>2000</td><td></td></tr><tr><td>冰箱</td><td>-</td><td>厨房</td><td>2000</td><td></td></tr><tr><td>洗衣机</td><td>-</td><td>阳台</td><td>2000</td><td></td></tr><tr><td>网络</td><td>-</td><td>-</td><td>1000</td><td></td></tr><tr><td>饮水机</td><td>-</td><td>-</td><td>200</td><td></td></tr></tbody></table><h3 id="实际-装修完后-·家具-："><a href="#实际-装修完后-·家具-：" class="headerlink" title="实际  装修完后 ·家具 ："></a>实际  装修完后 ·家具 ：</h3><table><thead><tr><th>家具名称</th><th>家电品牌</th><th>类型</th><th>预算价钱</th><th>实际价钱</th></tr></thead><tbody><tr><td>主卧床</td><td>-</td><td>大床(2*1.8)</td><td>5000</td><td></td></tr><tr><td>次卧床</td><td>-</td><td>大床(1.8*1.8)</td><td>1800 + 2500</td><td></td></tr><tr><td>窗帘</td><td>-</td><td>三个卧室 + 客厅阳台</td><td>2000</td><td></td></tr><tr><td>空调</td><td>格力&#x2F;美的</td><td>主卧 + 次卧</td><td>4200</td><td></td></tr><tr><td>电视机</td><td>夏普</td><td>客厅</td><td>3900</td><td></td></tr><tr><td>沙发</td><td>-</td><td>客厅</td><td>5000</td><td></td></tr><tr><td>餐桌</td><td>-</td><td>餐厅(8人桌)</td><td>200</td><td></td></tr><tr><td>冰箱</td><td>-</td><td>厨房</td><td>3500</td><td></td></tr><tr><td>洗衣机</td><td>-</td><td>阳台</td><td>2500</td><td></td></tr><tr><td>网络</td><td>-</td><td>-</td><td>98*12</td><td></td></tr><tr><td>饮水机</td><td>-</td><td>-</td><td>没买</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="生活" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="记录" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>go语言</title>
    <link href="http://example.com/2023/07/18/golang/go/"/>
    <id>http://example.com/2023/07/18/golang/go/</id>
    <published>2023-07-18T06:32:25.000Z</published>
    <updated>2023-07-20T06:04:32.450Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="row">    <embed src="/pdf/Go并发模型之GMP.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="golang" scheme="http://example.com/categories/golang/"/>
    
    <category term="基础" scheme="http://example.com/categories/golang/%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="go" scheme="http://example.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>项目笔记</title>
    <link href="http://example.com/2023/07/18/%E6%97%A5%E5%B8%B8%E9%A1%B9%E7%9B%AE%E5%A4%87%E6%B3%A8/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/07/18/%E6%97%A5%E5%B8%B8%E9%A1%B9%E7%9B%AE%E5%A4%87%E6%B3%A8/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/</id>
    <published>2023-07-18T06:26:21.000Z</published>
    <updated>2023-07-18T06:27:44.272Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://learnku.com/articles/21623">促销系统1</a></li><li><a href="https://learnku.com/articles/21461">促销系统2</a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="项目" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="笔记" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>工具</title>
    <link href="http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/ps/"/>
    <id>http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/ps/</id>
    <published>2023-07-18T06:14:55.000Z</published>
    <updated>2023-07-18T07:52:52.946Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="vscode-快捷键"><a href="#vscode-快捷键" class="headerlink" title="vscode 快捷键"></a>vscode 快捷键</h5><p><code>选中一段文字，按shift+alt+i，可以在每行末尾出现光标 批量编辑</code></p><h5 id="phpstrom"><a href="#phpstrom" class="headerlink" title="phpstrom"></a>phpstrom</h5><p><code>一直按Alt+J</code></p><h5 id="apipost-全局设置参数"><a href="#apipost-全局设置参数" class="headerlink" title="apipost 全局设置参数"></a>apipost 全局设置参数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;token&#125;&#125;</span><br><span class="line">&#123;&#123;auth-key&#125;&#125;</span><br><span class="line">apt.<span class="property">variables</span>.<span class="title function_">set</span>(<span class="string">&#x27;token&#x27;</span>,response.<span class="property">json</span>.<span class="property">data</span>.<span class="property">token</span>);</span><br><span class="line">apt.<span class="property">variables</span>.<span class="title function_">set</span>(<span class="string">&#x27;auth-key&#x27;</span>,response.<span class="property">json</span>.<span class="property">data</span>.<span class="property">auth_key</span>);</span><br></pre></td></tr></table></figure><h5 id="chartgpt"><a href="#chartgpt" class="headerlink" title="chartgpt"></a>chartgpt</h5><p><code>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</code></p><h5 id="phpstorm-debug调式"><a href="#phpstorm-debug调式" class="headerlink" title="phpstorm debug调式"></a>phpstorm debug调式</h5><p><code>?XDEBUG_SESSION_START=PHPSTROM</code></p><h5 id="要将两行合并为一行并移除不必要的空格，请按-⌃⇧J。"><a href="#要将两行合并为一行并移除不必要的空格，请按-⌃⇧J。" class="headerlink" title="要将两行合并为一行并移除不必要的空格，请按 ⌃⇧J。"></a>要将两行合并为一行并移除不必要的空格，请按 ⌃⇧J。</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="phpstrom" scheme="http://example.com/categories/php/phpstrom/"/>
    
    
    <category term="phpstorm" scheme="http://example.com/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>hyperf</title>
    <link href="http://example.com/2023/07/18/php/hyperf/"/>
    <id>http://example.com/2023/07/18/php/hyperf/</id>
    <published>2023-07-18T06:13:00.000Z</published>
    <updated>2023-07-18T06:30:26.122Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="hyperf-设置根目录静态资源访问"><a href="#hyperf-设置根目录静态资源访问" class="headerlink" title="hyperf 设置根目录静态资源访问"></a>hyperf 设置根目录静态资源访问</h3><p> config&#x2F;server.php  <a href="https://wiki.swoole.com/#/http_server?id=static_handler_locations">swoole server配置</a></p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;document_root&#x27;</span>            =&gt; BASE_PATH.<span class="string">&#x27;/web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;static_handler_locations&#x27;</span> =&gt; [<span class="string">&#x27;/&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;enable_static_handler&#x27;</span>    =&gt; <span class="literal">true</span>,</span><br></pre></td></tr></table></figure><blockquote><p>web目录访问 ： <a href="http://127.0.0.1:9501/index.html">http://127.0.0.1:9501/index.html</a></p></blockquote><h4 id=""><a href="#" class="headerlink" title=""></a></h4><p>hyperf 生成控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php bin/hyperf.php gen:controller -N App\Wechat\Controller tt</span><br><span class="line"></span><br><span class="line">php bin/hyperf.php gen:controller -N App\Admin\Controller TalkTag</span><br><span class="line"></span><br><span class="line">php bin/hyperf.php  gen:model  --path=app/SaasModel --pool=saas  -i=BaseModel  goods_order</span><br></pre></td></tr></table></figure><h5 id="导出excel-6w数据分批导出-大概-20s-单次db-1w条数据"><a href="#导出excel-6w数据分批导出-大概-20s-单次db-1w条数据" class="headerlink" title="导出excel, 6w数据分批导出,大概 20s 单次db 1w条数据"></a>导出excel, 6w数据分批导出,大概 20s 单次db 1w条数据</h5><p><code>1.导出excel文件存放storage/xx.xls</code><br><code>2.$this-&gt;response-&gt;download(&#39;filepath&#39;,&#39;filename&#39;)</code></p><p>参考代码 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Wechat</span>\<span class="title class_">WxUtils</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpOffice</span>\<span class="title">PhpSpreadsheet</span>\<span class="title">IOFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpOffice</span>\<span class="title">PhpSpreadsheet</span>\<span class="title">Spreadsheet</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Excel</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$sheet</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$spreadsheet</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$row</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;spreadsheet = <span class="keyword">new</span> <span class="title class_">Spreadsheet</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;spreadsheet-&gt;<span class="title function_ invoke__">setActiveSheetIndex</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sheet = <span class="variable language_">$this</span>-&gt;spreadsheet-&gt;<span class="title function_ invoke__">getActiveSheet</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;spreadsheet-&gt;<span class="title function_ invoke__">getActiveSheet</span>()-&gt;<span class="title function_ invoke__">setTitle</span>(<span class="string">&#x27;Sheet1&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setHeader</span>(<span class="params"><span class="variable">$title</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$title</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$item</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;sheet-&gt;<span class="title function_ invoke__">setCellValue</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$key</span> + <span class="number">65</span>).<span class="string">&#x27;1&#x27;</span>, <span class="variable">$item</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;row = <span class="number">2</span>; <span class="comment">// 从第二行开始</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addData</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;</span><br><span class="line">            <span class="variable">$dataCol</span> = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$item</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="comment">// 单元格内容写入</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;sheet-&gt;<span class="title function_ invoke__">setCellValue</span>(<span class="variable">$dataCol</span>.<span class="variable">$this</span>-&gt;row, <span class="variable">$value</span>);</span><br><span class="line">                <span class="variable">$dataCol</span>++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;row++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"><span class="variable">$fileName</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;spreadsheet-&gt;<span class="title function_ invoke__">setActiveSheetIndex</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$fileName</span>    = <span class="variable">$fileName</span>.<span class="string">&#x27;.xlsx&#x27;</span>;</span><br><span class="line">        <span class="variable">$url</span>         = <span class="string">&#x27;/storage/&#x27;</span>.<span class="variable">$fileName</span>;</span><br><span class="line">        <span class="variable">$outFilename</span> = BASE_PATH.<span class="variable">$url</span>;</span><br><span class="line">        <span class="variable">$writer</span>      = <span class="title class_">IOFactory</span>::<span class="title function_ invoke__">createWriter</span>(<span class="variable">$this</span>-&gt;spreadsheet, <span class="string">&#x27;Xlsx&#x27;</span>);</span><br><span class="line">        <span class="variable">$writer</span>-&gt;<span class="title function_ invoke__">save</span>(<span class="variable">$outFilename</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;spreadsheet-&gt;<span class="title function_ invoke__">disconnectWorksheets</span>();</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;spreadsheet);</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;path&#x27;</span> =&gt; <span class="variable">$outFilename</span>, <span class="string">&#x27;filename&#x27;</span> =&gt; <span class="variable">$fileName</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="缓存-key-mutex-问题"><a href="#缓存-key-mutex-问题" class="headerlink" title="缓存 key mutex 问题"></a>缓存 key mutex 问题</h3><blockquote><p><a href="https://www.cnblogs.com/sunli/archive/2010/07/27/cache_key_mutex.html">key mutex</a></p></blockquote><blockquote><p><a href="https://timyang.net/">微博cache key</a></p></blockquote><p> 目标 ： 尽量少的线程（或者1个线程）来构建换成</p><p> 1.使用 mutex key 使用1个线程来构建缓存<br> ，其他线程等待构建缓存的线程执行完即可 </p><p> <img src="http://dl2.iteye.com/upload/attachment/0114/5770/3756710e-5dff-39e8-95af-93c7cd9bc17a.jpg" alt="image"></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> 参考代码</span><br><span class="line"> </span><br><span class="line"> String get(String key) &#123;  </span><br><span class="line">   String value = redis.get(key);  </span><br><span class="line">   if (value  == null) &#123;  </span><br><span class="line">    if (redis.setnx(key_mutex, &quot;1&quot;)) &#123;  </span><br><span class="line">        // 3 min timeout to avoid mutex holder crash  </span><br><span class="line">        redis.expire(key_mutex, 3 * 60)  </span><br><span class="line">        value = db.get(key);  </span><br><span class="line">        redis.set(key, value);  </span><br><span class="line">        redis.delete(key_mutex);  </span><br><span class="line">    &#125; else &#123;  </span><br><span class="line">        //其他线程休息50毫秒后重试  </span><br><span class="line">        Thread.sleep(50);  </span><br><span class="line">        get(key);  </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><ol start="2"><li>“提前”使用互斥锁(mutex key) 在value 中设置1个 time_out 时间戳</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">v = memcache.get(key);  </span><br><span class="line">if (v == null) &#123;  </span><br><span class="line">    if (memcache.add(key_mutex, 3 * 60 * 1000) == true) &#123;  </span><br><span class="line">        value = db.get(key);  </span><br><span class="line">        memcache.set(key, value);  </span><br><span class="line">        memcache.delete(key_mutex);  </span><br><span class="line">    &#125; else &#123;  </span><br><span class="line">        sleep(50);  </span><br><span class="line">        retry();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; else &#123;  </span><br><span class="line">    if (v.timeout &lt;= now()) &#123;  </span><br><span class="line">        if (memcache.add(key_mutex, 3 * 60 * 1000) == true) &#123;  </span><br><span class="line">            // extend the timeout for other threads  </span><br><span class="line">            v.timeout += 3 * 60 * 1000;  </span><br><span class="line">            memcache.set(key, v, KEY_TIMEOUT * 2);  </span><br><span class="line">  </span><br><span class="line">            // load the latest value from db  </span><br><span class="line">            v = db.get(key);  </span><br><span class="line">            v.timeout = KEY_TIMEOUT;  </span><br><span class="line">            memcache.set(key, value, KEY_TIMEOUT * 2);  </span><br><span class="line">            memcache.delete(key_mutex);  </span><br><span class="line">        &#125; else &#123;  </span><br><span class="line">            sleep(50);  </span><br><span class="line">            retry();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>3.永不过期 <a href="https://www.iteye.com/blog/user/carlosfu/">博客</a></p><h3 id="缓存雪崩-："><a href="#缓存雪崩-：" class="headerlink" title="@@ 缓存雪崩 ："></a>@@ 缓存雪崩 ：</h3><ol><li>设置缓存时，key都采用了相同expire </li><li>缓存服务宕机</li></ol><p>实现熔断限流机制，对系统进行负载能力控制,</p><p>在原有失效时间基础上增加一个随机值，比如1~5分钟的随机，这样每个缓存的过期时间重复率就会降低，集体失效概率也会大大降低</p><p>限流或者降级 例如5w个请求,先允许2w 部分请求先进来, 其他3w请求打到写好限流中间件返回空值或者默认值</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/3/27/169bb265aa52e948~tplv-t2oaga2asx-image.image" alt="image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ad0a581b1dc45cca657232cb92701bc~tplv-k3u1fbpfcp-watermark.awebp" alt="image"></p><h3 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="@@ 缓存穿透"></a>@@ 缓存穿透</h3><blockquote><p>大量并发查询一个不存在的key 导致数据库流量都打到数据库</p></blockquote><blockquote><p>Bloom过滤或RoaringBitmap 判断KEY是否存在</p></blockquote><p>【 最常见的布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被这个bitmap拦截掉，从而避免了对底层存储系统的查询压力】</p><p> 怎么理解 ：数据库ID 1-100000 每条插入的时候id 插入到布隆过器里面， 使用布隆过滤器进行过滤</p><p> <img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/3/27/169bb2638b91b339~tplv-t2oaga2asx-image.image" alt="image"></p><p> 缓存空值的KEY，这样第一次不存在也会被加载会记录，下次拿到有这个KEY</p><h3 id="缓存穿透-1"><a href="#缓存穿透-1" class="headerlink" title="@@ 缓存穿透"></a>@@ 缓存穿透</h3><p> 某KEY失效时，正好有大量并发请求访问该KEY</p><p> 缓存 + 过期时间 存储一个value 进行提前重设</p><h3 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h3><p> <img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/30/1712b5213446a402~tplv-t2oaga2asx-watermark.awebp" alt="image"></p><h3 id="脏读（dirty-read）"><a href="#脏读（dirty-read）" class="headerlink" title="脏读（dirty read）"></a>脏读（dirty read）</h3><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/2/1713824c77723cd4~tplv-t2oaga2asx-watermark.awebp" alt="image"></p><p>由上图可以发现，事务A、B交替执行，事务A被事务B干扰到了，因为事务A读取到事务B未提交的数据,这就是脏读</p><p>事务A需要读到100的余额</p><h3 id="不可重复读（unrepeatable-read）"><a href="#不可重复读（unrepeatable-read）" class="headerlink" title="不可重复读（unrepeatable read）"></a>不可重复读（unrepeatable read）</h3><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/2/1713829b86401900~tplv-t2oaga2asx-watermark.awebp" alt="image"></p><p><img src="https://cdn.learnku.com/uploads/images/202002/05/32495/YdNemia6wc.png!large" alt="image"></p><p>事务A又被事务B干扰到了！在事务A范围内，两个相同的查询，读取同一条记录，却返回了不同的数据，这就是不可重复读</p><h3 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h3><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/2/171382b2bdd28029~tplv-t2oaga2asx-watermark.awebp" alt="image"></p><p>事务A查询一个范围的结果集，另一个并发事务B往这个范围中插入&#x2F;删除了数据，，然后事务A再次查询相同的范围，两次读取得到的结果集不一样了，这就是幻读</p><h3 id="事务四大隔离级别"><a href="#事务四大隔离级别" class="headerlink" title="事务四大隔离级别"></a>事务四大隔离级别</h3><ul><li>读未提交（Read Uncommitted）</li></ul><p>事务读不加锁，不阻塞其他事务的读和写<br>事务写阻塞其他事务写，但不阻塞其他事务读； </p><p> <img src="https://cdn.learnku.com/uploads/images/202002/04/32495/Wcv8DTijTL.png!large" alt="image"></p><ul><li>读已提交（Read Committed）</li><li>可重复读（Repeatable Read）</li><li>串行化（Serializable）</li></ul><h3 id="tcp协议部分-a"><a href="#tcp协议部分-a" class="headerlink" title="tcp协议部分 a"></a>tcp协议部分 <a href="https://hit-alibaba.github.io/interview/basic/network/TCP.html">a</a></h3><h3 id="记录一次swoole-4-8升级安装报错问题"><a href="#记录一次swoole-4-8升级安装报错问题" class="headerlink" title="记录一次swoole 4.8升级安装报错问题"></a>记录一次swoole 4.8升级安装报错问题</h3><p>源码包编译安装 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP Warning: PHP Startup: Unable to load dynamic library &#x27;swoole.so&#x27; (tried: /usr/local/php/lib/php/extensions/no-debug-non-zts-20190902/swoole.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20190902/swoole.so: undefined symbol: curl_CURLFile_class), /usr/local/php/lib/php/extensions/no-debug-non-zts-20190902/swoole.so.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20190902/swoole.so.so: cannot open shared object file: No such file or directory)) in Unknown on line 0</span><br></pre></td></tr></table></figure><blockquote><p>在php.ini中先加载curl </p></blockquote><p><code>extension=curl.so</code></p><p><code>extension=swoole.so</code></p><blockquote><p>这样会导致重复加载curl.so ,  在mod_目录中</p></blockquote><blockquote><p>curl.ini中下面加上swoole.so</p></blockquote><p><a href="https://github.com/swoole/swoole-src/issues/4301">swoole版本升级</a></p><h3 id="wsl-内部没有局域网ip-只能通过代理转发"><a href="#wsl-内部没有局域网ip-只能通过代理转发" class="headerlink" title="wsl 内部没有局域网ip 只能通过代理转发"></a>wsl 内部没有局域网ip 只能通过代理转发</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"> netsh interface portproxy add v4tov4 listenport=12000 listenaddress=0.0.0.0 connectport=9999 connectaddress=127.0.0.1  protocol=tcp</span><br><span class="line"></span><br><span class="line">9999：为内部wsl 服务端口</span><br><span class="line"></span><br><span class="line">172.27.240.162 ：为wsl 内部ip</span><br></pre></td></tr></table></figure><h3 id="查看端口转发状态"><a href="#查看端口转发状态" class="headerlink" title="查看端口转发状态"></a>查看端口转发状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy show all </span><br></pre></td></tr></table></figure><p>删除端口转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenport=* listenaddress=0.0.0.0</span><br><span class="line"></span><br><span class="line">*代表所有端口，0.0.0.0为所有ip</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    <category term="hyperf" scheme="http://example.com/categories/php/hyperf/"/>
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
    <category term="hyperf" scheme="http://example.com/tags/hyperf/"/>
    
  </entry>
  
  <entry>
    <title>wsl2使用</title>
    <link href="http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/wsl/"/>
    <id>http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/wsl/</id>
    <published>2023-07-18T06:05:57.000Z</published>
    <updated>2023-07-18T06:08:22.163Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>设置默认启动</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> ubuntu config --default-user root</span><br><span class="line"></span><br><span class="line"> add-apt-repository  &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line"></span><br><span class="line"> service ssh --full-restart</span><br><span class="line"></span><br><span class="line">端口转发</span><br><span class="line">iex &quot;netsh interface portproxy add v4tov4 listenport=12000 listenaddress= 192.168.19.117 connectport=8888 connectaddress=127.0.0.1&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="linux" scheme="http://example.com/categories/linux/"/>
    
    <category term="windows wsl" scheme="http://example.com/categories/linux/windows-wsl/"/>
    
    
    <category term="wsl2" scheme="http://example.com/tags/wsl2/"/>
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>mac</title>
    <link href="http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/mac/"/>
    <id>http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/mac/</id>
    <published>2023-07-18T06:05:57.000Z</published>
    <updated>2023-09-21T01:08:22.812Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>mac 电脑的全新下载 下载源</strong></p><p>码云地址： <a href="https://gitee.com/cunkai/HomebrewCN">https://gitee.com/cunkai/HomebrewCN</a></p><p>mac 阿里云源 <a href="https://developer.aliyun.com/mirror/homebrew/?spm=a2c6h.25603864.0.0.4c795129L0K5fb">https://developer.aliyun.com/mirror/homebrew/?spm=a2c6h.25603864.0.0.4c795129L0K5fb</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="mac" scheme="http://example.com/categories/mac/"/>
    
    
    <category term="mac" scheme="http://example.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>vue笔记</title>
    <link href="http://example.com/2023/07/18/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/"/>
    <id>http://example.com/2023/07/18/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/</id>
    <published>2023-07-18T01:10:56.000Z</published>
    <updated>2023-07-18T01:11:49.220Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
    
  </entry>
  
  <entry>
    <title>面试总结</title>
    <link href="http://example.com/2023/07/18/%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95/"/>
    <id>http://example.com/2023/07/18/%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95/</id>
    <published>2023-07-18T01:10:02.000Z</published>
    <updated>2023-07-18T01:10:28.173Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="面试" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="总结" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>git笔记</title>
    <link href="http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/git/"/>
    <id>http://example.com/2023/07/18/%E5%B7%A5%E5%85%B7/git/</id>
    <published>2023-07-18T01:07:28.000Z</published>
    <updated>2023-08-04T09:48:54.517Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="git忽略文件权限"><a href="#git忽略文件权限" class="headerlink" title="git忽略文件权限"></a>git忽略文件权限</h3><p><code>git config --global core.filemode false</code></p><h3 id="在最后一条记录，可以看到信息为：“-checkout-moving-from-master-to-develop”，表示develop分支是从master分支“移动”过去的，也就是develop分支是基于master分支拉取的"><a href="#在最后一条记录，可以看到信息为：“-checkout-moving-from-master-to-develop”，表示develop分支是从master分支“移动”过去的，也就是develop分支是基于master分支拉取的" class="headerlink" title="在最后一条记录，可以看到信息为：“ checkout: moving from master to develop”，表示develop分支是从master分支“移动”过去的，也就是develop分支是基于master分支拉取的"></a>在最后一条记录，可以看到信息为：“ checkout: moving from master to develop”，表示develop分支是从master分支“移动”过去的，也就是develop分支是基于master分支拉取的</h3><p><code>git reflog show --date=local | grep 当前分支名</code></p><h4 id="一次性推送本地所有标签"><a href="#一次性推送本地所有标签" class="headerlink" title="一次性推送本地所有标签"></a>一次性推送本地所有标签</h4><p><code>git push origin --tags</code></p><h4 id="git中如何合并某个指定文件"><a href="#git中如何合并某个指定文件" class="headerlink" title="git中如何合并某个指定文件"></a>git中如何合并某个指定文件</h4><p><code>分支A_bracn和B_branch，只想将A_branch分支的某个文件f.txt合并到B_branch分支上。     git checkout A_branch     git checkout --patch B_branch f.txt</code><br>第一个命令： 切换到A分支；<br>第二个命令：合并B分支上f文件到A分支上，将B分支上 f 文件追加补丁到A分支上 f文件。你可以接受或者拒绝补丁内容。</p><p><code>如果只是简单的将A_branch分支的文件f.txt copy到B_branch分支上</code></p><blockquote><p>git checkout B_branch<br>cd path&#x2F;to&#x2F;f.txt<br>git checkout A_bracn  f.txt</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br></pre></td><td class="code"><pre><span class="line"># 显示详细的修改状态</span><br><span class="line">$ git status </span><br><span class="line"># 以短格式显示状态,更简洁</span><br><span class="line">$ git status -s </span><br><span class="line"># 顺便显示当前分支名</span><br><span class="line">$ git status -b</span><br><span class="line"># 显示忽略的文件</span><br><span class="line">$ git status --ignored</span><br><span class="line"></span><br><span class="line"># 显示工作区与暂存区的差异。</span><br><span class="line">$ git diff </span><br><span class="line"># 显示暂存区与仓库的差异</span><br><span class="line">$ git diff --staged </span><br><span class="line">$ git diff --cached</span><br><span class="line"># 显示工作区与仓库的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"># 显示两个提交之间的差异</span><br><span class="line">$ git diff 02d1a7b d2974d6</span><br><span class="line"># 显示两个分支之间的差异。</span><br><span class="line">$ git diff dev master</span><br><span class="line"># 导出差异文件成压缩包</span><br><span class="line">$ git diff --name-only   144d196 188df06a | xargs tar -cvf pacakge.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 提交暂存区的修改,并添加提交信息,生成commit id</span><br><span class="line">$ git commit -m &quot;message&quot;</span><br><span class="line"># 提交工作区和暂存区的所有修改,不包含新建的文件</span><br><span class="line">$ git commit -am &quot;message&quot;</span><br><span class="line"># 修改最后一次提交的信息</span><br><span class="line">$ git commit --amend</span><br><span class="line"># 绕过钩子程序</span><br><span class="line">$ git commit --no-verify</span><br><span class="line"># 允许空白提交,git tag可能会用到</span><br><span class="line">$ git commit --allow-empty</span><br><span class="line"></span><br><span class="line"># 放弃对工作区文件的修改,恢复到仓库HEAD的状态,可用正则匹配</span><br><span class="line">$ git restore hello.c                   </span><br><span class="line">$ git restore &#x27;*.c&#x27;</span><br><span class="line">$ git restore .</span><br><span class="line"># 恢复工作区文件到指定提交的状态</span><br><span class="line">$ git restore --source 7d68213 hello.c</span><br><span class="line">$ git restore -s 7d68213 hello.c</span><br><span class="line"># 仅恢复暂存区的文件到HEAD状态,不影响工作区,相当于撤销git add hello.c操作</span><br><span class="line">$ git restore --staged hello.c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 重置HEAD为指定提交,重置暂存区但保留工作区修改</span><br><span class="line">$ git reset 7d68213</span><br><span class="line">$ git reset --mixed 7d68213</span><br><span class="line"># 重置HEAD为指定提交,但保留工作区修改</span><br><span class="line">$ git reset --soft 7d68213</span><br><span class="line"># 回滚HEAD两个版本,但保留工作区修改</span><br><span class="line">$ git reset --soft HEAD~2</span><br><span class="line"># 重置HEAD为指定提交,重置暂存区和工作区,丢弃所有修改</span><br><span class="line">$ git reset --hard dc7ccb1</span><br><span class="line"># 重置时保留未跟踪文件。</span><br><span class="line">$ git reset --mixed --keep 2d3a2b9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 删除指定文件,并提交移除操作到暂存区,删除前会检查文件状态,以免误删未提交的修改。</span><br><span class="line">$ git rm index.php</span><br><span class="line"># 删除指定文件,并提交移除操作到暂存区,删除前不会检查文件状态</span><br><span class="line">$ git rm -f index.php</span><br><span class="line"># 删除暂存区和仓库中的文件,但保留工作区中的文件</span><br><span class="line">$ git rm --cached xx.log</span><br><span class="line"># 递归删除整个目录</span><br><span class="line">$ git rm -r runtime/</span><br><span class="line"># 删除目录中的所有文件的暂存区和仓库版本,但保留工作区中的文件,一般用于.gitignore文件添加.idea文件夹时,把.idea从暂存区和仓库删掉同时保留工作区文件</span><br><span class="line">$ git rm -r --cached .idea/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 列出本地所有分支</span><br><span class="line">$ git branch</span><br><span class="line"># 创建本地新分支</span><br><span class="line">$ git branch feature/devlop</span><br><span class="line"># 删除本地分支,只能删除已合并的分支,或者HEAD和master一致的分支(还没commit过)</span><br><span class="line">$ git branch -d feature/devlop</span><br><span class="line"># 删除本地分支,可以删除未合并的分支</span><br><span class="line">$ git branch -D feature/devlop</span><br><span class="line"># 列出本地分支及其最后一个提交</span><br><span class="line">$ git branch -v</span><br><span class="line"># 列出本地已经合并到当前分支的分支</span><br><span class="line">$ git branch --merged</span><br><span class="line"># 列出尚未合并到当前分支的分支</span><br><span class="line">$ git branch --no-merged</span><br><span class="line"># 列出本地和远程所有分支</span><br><span class="line">$ git branch -a</span><br><span class="line"># 重命名分支</span><br><span class="line">$ git branch -m master main</span><br><span class="line"># 复制一个分支到新创建的分支上,拥有前分支完整的历史</span><br><span class="line">$ git branch -c new_branch</span><br><span class="line"># 将本地分支与指定的远程分支建立追踪关系。</span><br><span class="line">$ git branch --set-upstream-to main main</span><br><span class="line"># 删除对远程分支的追踪设置。</span><br><span class="line">$ git branch --unset-upstream new_branch</span><br><span class="line"># 从 c83c925f6 提交处创建新的分支。</span><br><span class="line">$ git branch test c83c925f6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 切换到指定分支</span><br><span class="line">$ git checkout master:切换到指定分支</span><br><span class="line"># 创建新分支并切换到该分支</span><br><span class="line">$ git checkout -b develop</span><br><span class="line"># 丢弃工作区的修改,恢复与暂存区一致的版本</span><br><span class="line">$ git checkout -- index.php</span><br><span class="line"># 工作区中文件的版本回滚到仓库指定提交</span><br><span class="line">$ git checkout cdc5737 -- index.php</span><br><span class="line"># 切换到指定tag所指向的提交,配合rebase使用可以在重要的标记状态继续工作,同时不必担心丢失之前的提交</span><br><span class="line">$ git checkout v1.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 将指定分支 develop 合并到当前分支,如果可以快进则快进,如果不能快进则创建一个新的合并提交,保留完整的分支记录</span><br><span class="line"># 快进指的是如果develop HEAD是master HEAD的上游,则可以直接把master HEAD改成develop HEAD</span><br><span class="line">$ git merge develop</span><br><span class="line"># 禁用快进,创建一个新的合并提交,即使可以进行快进合并,保留完整的分支记录,常用于开发阶段</span><br><span class="line">$ git merge --no-ff develop</span><br><span class="line"># 仅在可以进行快进合并时才会合并指定分支</span><br><span class="line">$ git merge --ff-only develop</span><br><span class="line"># 将指定分支 develop 的多个提交压缩到一个提交,合并到当前分支的暂存区,需要手动提交</span><br><span class="line">$ git merge --squash develop</span><br><span class="line"># 执行合并但不创建提交,需要手动提交</span><br><span class="line">$ git merge --no-commit develop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 显示最近两次提交</span><br><span class="line">$ git log -2</span><br><span class="line"># 显示某个作者的提交日志 </span><br><span class="line">$ git log --author=&quot;ben&quot;</span><br><span class="line"># 显示某个日期范围内的提交 </span><br><span class="line">$ git log --since=1.month --until=&quot;2018-02-28&quot;</span><br><span class="line"># 显示包含某个关键词的提交</span><br><span class="line">$ git log --grep=&quot;README&quot;</span><br><span class="line"># 显示某个文件被修改的历史 </span><br><span class="line">$ git log --follow README.md</span><br><span class="line"># 一条命令显示简洁日志、分支和版本标签</span><br><span class="line">$ git log --oneline --decorate --all --graph</span><br><span class="line"># 显示提交统计信息 </span><br><span class="line">$ git log --stat</span><br><span class="line"># 显示某个tag到当前提交的日志 </span><br><span class="line">$ git log v1.0.0..HEAD</span><br><span class="line"># 显示某个tag和最后一个tag之间的所有提交</span><br><span class="line">git log v1.0.0..v1.2.1</span><br><span class="line"># 显示某个分支的日志</span><br><span class="line">$ git log master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 显示所有存储的stash,可以使用git stash apply恢复指定的stash。</span><br><span class="line">$ git stash list</span><br><span class="line"># 显示指定stash的更改信息,不恢复stash。</span><br><span class="line">$ git stash show stash@&#123;0&#125;</span><br><span class="line"># 以补丁的形式显示更改信息。</span><br><span class="line">$ git stash show -p</span><br><span class="line"># 恢复指定的stash到一个新分支上。</span><br><span class="line">$ git stash branch new_branch</span><br><span class="line"># 恢复最近一次的stash,并从stash list中移除它。</span><br><span class="line">$ git stash pop</span><br><span class="line"># 从stash list中移除一个stash,不会恢复它。</span><br><span class="line">$ git stash drop</span><br><span class="line"># 清除所有stash。</span><br><span class="line">$ git stash clear</span><br><span class="line"># 恢复指定的stash,但是不从stash list中移除它,可以用于测试恢复效果。</span><br><span class="line">$ git stash apply stash@&#123;0&#125;</span><br><span class="line"># 保存当前工作并添加注释,便于之后查找恢复。</span><br><span class="line">$ git stash save &quot;some comments&quot;</span><br><span class="line"># 交互式地选择要暂存的更改部分,不保存全部的工作进度。</span><br><span class="line">$ git stash save --patch</span><br><span class="line"># 只暂存已经添加至暂存区的更改,未添加的更改不会被暂存。</span><br><span class="line">$ git stash save --keep-index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 打一个轻量级标签</span><br><span class="line">$ git tag v1.0</span><br><span class="line"># 打一个带注释的标签</span><br><span class="line">$ git tag -a v2.0 -m &quot;Release version 2.0&quot;</span><br><span class="line"># 给过去的某次提交打标签</span><br><span class="line">$ git tag -a v1.1 9fa1799</span><br><span class="line"># 查看v1.1的标签信息和提交信息</span><br><span class="line">$ git show v1.1</span><br><span class="line"># 从标签v1.1创建新分支</span><br><span class="line">$ git checkout -b release-v1.1 v1.1</span><br><span class="line"># 删除本地标签v1.1</span><br><span class="line">$ git tag -d v1.1</span><br><span class="line"># 推送单个新标签到远程</span><br><span class="line">$ git push origin v1.0</span><br><span class="line"># 推送所有新标签到远程</span><br><span class="line">$ git push origin --tags</span><br><span class="line"># 删除远程标签</span><br><span class="line">$ git tag -r &lt;tagname&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取所有远程仓库最新提交:</span><br><span class="line">$ git fetch --all</span><br><span class="line"># 查看本地和远程仓库差异,然后合并</span><br><span class="line">$ git log origin/dev..dev</span><br><span class="line">$ git diff origin/dev dev</span><br><span class="line">$ git merge</span><br><span class="line"></span><br><span class="line"># 只获取origin远程仓库master分支的最新两个提交</span><br><span class="line">$ git fetch origin master --depth 2</span><br><span class="line"># 获取origin远程仓库,并清除服务器上已经删除的分支</span><br><span class="line">$ git fetch --prune origin</span><br><span class="line"># 将一个浅仓库转为完整仓库:</span><br><span class="line">$ git fetch --unshallow</span><br><span class="line"># 预览将要获取的提交,但不实际获取</span><br><span class="line">$ git fetch --dry-run</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 从origin远程仓库获取master分支并合并: </span><br><span class="line">$ git pull origin master</span><br><span class="line"># 使用rebase合并:</span><br><span class="line">$ git pull --rebase</span><br><span class="line"># 只在可以快速向前合并的情况下进行合并:</span><br><span class="line">$ git pull --ff-only</span><br><span class="line"># 从所有远程仓库获取数据并合并: </span><br><span class="line">$ git pull --all</span><br><span class="line"># 删除远程仓库origin并更新引用:</span><br><span class="line">$ git pull -d origin</span><br><span class="line"># 拉取远程仓库的标签</span><br><span class="line">$ git pull --tags</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 推送master分支到origin远程仓库: </span><br><span class="line">$ git push origin master</span><br><span class="line"># 推送全部本地分支到origin:</span><br><span class="line">$ git push origin --all</span><br><span class="line"># 删除远程仓库origin的dev分支:</span><br><span class="line">$ git push origin --delete dev</span><br><span class="line"># 强制推送master分支到origin,会覆盖远程分支:</span><br><span class="line">$ git push origin master --force</span><br><span class="line"># 只有在远程master分支是当前master分支的上游分支时,才强制推送:</span><br><span class="line">$ git push origin master --force-with-lease</span><br><span class="line"># 推送所有标签到远程仓库</span><br><span class="line">$ git push &lt;remote&gt; --tags</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/user/repo.git</span><br><span class="line">git remote add upstream https://gitlab.com/user/repo.git </span><br><span class="line">git remote add alias https://bitbucket.org/user/repo.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 列出当前所有的远程仓库别名</span><br><span class="line">$ git remote</span><br><span class="line"># 添加一个新的远程仓库origin,URL为https://github.com/user/repo.git</span><br><span class="line">$ git remote add origin https://github.com/user/repo.git</span><br><span class="line"># 重命名远程仓库upstream为up</span><br><span class="line">$ git remote rename upstream up</span><br><span class="line"># 移除远程仓库up</span><br><span class="line">$ git remote remove up</span><br><span class="line"># 修改远程仓库origin的URL</span><br><span class="line">$ git remote set-url origin https://gitee.com/user/repo.git</span><br><span class="line"># 列出远程仓库origin的详细信息</span><br><span class="line">$ git remote show origin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 显示HEAD指向的提交信息</span><br><span class="line">$ git show</span><br><span class="line"># 显示master分支的最新提交815e1c2的信息</span><br><span class="line">$ git show 815e1c2</span><br><span class="line"># 仅显示该提交修改的文件列表</span><br><span class="line">$ git show 815e1c2 --name-only</span><br><span class="line"># 显示该提交的文件差异 </span><br><span class="line">$ git show 815e1c2 -p</span><br><span class="line"># 以medium格式显示提交信息</span><br><span class="line">$ git show 815e1c2 --pretty=medium</span><br><span class="line"># 显示要应用提交815e1c2,需要运行的cherry-pick命令</span><br><span class="line">$ git show 815e1c2 --cherry-pick</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 显示所有提交的简要日志,按提交者排序</span><br><span class="line">$ git shortlog</span><br><span class="line"># 仅显示最近10次提交</span><br><span class="line">$ git shortlog -n 10</span><br><span class="line"># 显示提交者和提交次数的汇总,不显示提交摘要</span><br><span class="line">$ git shortlog -s</span><br><span class="line"># 显示所有提交者的邮箱和提交SHA-1校验和</span><br><span class="line">$ git shortlog -e --all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查找master最近5次变更</span><br><span class="line">$ git reflog show master | head - 5</span><br><span class="line">750c435 (HEAD -&gt; master) master@&#123;0&#125;: commit: xx</span><br><span class="line">2d3a2b9 (tag: v1.0) master@&#123;1&#125;: reset: moving to 2d3a2b9d</span><br><span class="line">dc7ccb1 master@&#123;2&#125;: reset: moving to dc7ccb1</span><br><span class="line">2d3a2b9 (tag: v1.0) master@&#123;3&#125;: reset: moving to 2d3a2b9dc</span><br><span class="line"></span><br><span class="line"># 回滚到master两次改变之前的commit,git log也会恢复</span><br><span class="line">$ git reset --hard master@&#123;2&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 撤销最近一次提交 </span><br><span class="line">$ git revert HEAD</span><br><span class="line"># 撤销指定的提交 </span><br><span class="line">$ git revert 8fd4e43</span><br><span class="line"># 编辑revert信息</span><br><span class="line">$ git revert -e 8fd4e43</span><br><span class="line"># 撤销指定提交,不记录revert到操作</span><br><span class="line">$ git revert --no-commit 8fd4e43</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 将experiment分支rebase到master分支  </span><br><span class="line">$ git checkout experiment </span><br><span class="line">$ git rebase master</span><br><span class="line"># 交互式rebase,合并最近3次提交  </span><br><span class="line">$ git rebase -i HEAD~3</span><br><span class="line"># 继续rebase操作  </span><br><span class="line">$ git rebase --continue  </span><br><span class="line"># 终止rebase操作  </span><br><span class="line">$ git rebase --abort</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 应用0001-fix-bug.patch补丁</span><br><span class="line">$ git apply 0001-fix-bug.patch</span><br><span class="line"># 仅显示应用该补丁后文件的变化统计:</span><br><span class="line">$ git apply --stat 0001-fix-bug.patch</span><br><span class="line"># 检查补丁是否可以应用成功:</span><br><span class="line">$ git apply --check 0001-fix-bug.patch</span><br><span class="line"># 应用补丁,更新索引而非工作树</span><br><span class="line">$ git apply --cached 0001-fix-bug.patch</span><br><span class="line"># 反转补丁的更改</span><br><span class="line">$ git apply --reverse 0001-fix-bug.patch</span><br><span class="line"># 在无法应用的部分中创建reject文件</span><br><span class="line">$ git apply --reject 0001-fix-bug.patch</span><br></pre></td></tr></table></figure><h2 id="git-分支笔记"><a href="#git-分支笔记" class="headerlink" title="git 分支笔记"></a>git 分支笔记</h2><pre><code> git branch  //查看分支git branch dev  //新建分支git checkout -b dev //创建分支并且切换到分支下git branch -d dev //删除dev 分支git merge dev //合并分支 </code></pre><h1 id="git-tag-标签"><a href="#git-tag-标签" class="headerlink" title="git tag 标签"></a>git tag 标签</h1><pre><code>git tag -a v1.0  //给目前提交打上标签 git tag -a v0.9 85fc7e7  //为某一个版本追加标签git tag            //查看标签git tag -d v1.0   //删除某个标签git show v1.0    //查看某个版本的修改</code></pre><h1 id="查看历史提交"><a href="#查看历史提交" class="headerlink" title="查看历史提交"></a>查看历史提交</h1><pre><code>git log --oneline  //正向查看提交历史一行一行git log --reverse --oneline // 逆向查看提交历史git log --oneline --graph  //以图表形式展示</code></pre><h1 id="git-diff-比较"><a href="#git-diff-比较" class="headerlink" title="git diff 比较"></a>git diff 比较</h1><pre><code>git  diff  master..test   //比较两个版本的差异 注意是是版本 文件git  diff  master...dev  //比较两个分支是否存在差异  三个... git diff  //显示在当前的工作目录里的，没有 staged(添加到索引中)，且在下次提交时 不会被提交的修改git diff --cached //当前的索引和上次提交间的差异；这些内容在不带&quot;-a&quot;参数运行 &quot;git commit&quot;命令时就会被提交git diff HEAD   //工作目录与上次提交时之间的所有差别git diff dev    //比较当前分支和dev 分支 文件差异 git diff HEAD -- ./lib  //比较某个分支下面的目录 </code></pre><h1 id="git-stash暂存区"><a href="#git-stash暂存区" class="headerlink" title="git stash暂存区"></a>git stash暂存区</h1><pre><code>git stash   //暂时隐藏本地修改的内容  恢复到上次条的版本git stash  apply //恢复暂存区的修改 git stash list  //显示暂存区的列表 git stash apply stash@&#123;1&#125;&#39; //使用在队列中的任意一个&#39;储藏&#39;(stashes)git stash clear stash@&#123;0&#125;  //清空某个暂存</code></pre><h1 id="开发错误提交处理"><a href="#开发错误提交处理" class="headerlink" title="开发错误提交处理"></a>开发错误提交处理</h1><pre><code>git reset --hard HEAD   // 如果你现在的工作目录(work  tree)里搞的一团乱麻, 但是你现在还没有把它们提交; 你可以通过下面的命令, 让工作目录回到上次提交时的状态(last committed state):git checkout -- hello.rb  // 修改某一个文件 还原到上一次提交  //都是针对尚未提交的版本 //如果是针对已经提交了的 进行版本回退  回退后进行提交git push git revert HEADgit revert HEAD^  gitk --all &amp;  //后台进程查看图像花提交图像git pull origin  newbranch //拉取指定分支  因为默认clone 是主分支 也是拉取主分支 //本地分支新建分支 推送到远程仓库中那么 进行 git  push origin newbranch  git  push origin newbranch   </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    <category term="笔记" scheme="http://example.com/categories/git/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>python笔记</title>
    <link href="http://example.com/2023/07/18/python/python/"/>
    <id>http://example.com/2023/07/18/python/python/</id>
    <published>2023-07-18T01:07:18.000Z</published>
    <updated>2023-07-18T07:41:38.882Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>元祖 tulpe  (1,2,3)  </p><p>list  [1,2,3,4]</p><p>字典： {“age”:1,’al’:2} </p><p>from sqlalchemy.dialects import mysql</p><p>！！！前提不要fist() all() 实例对象</p><p>sql &#x3D; user.statement.compile(dialect&#x3D;mysql.dialect(), compile_kwargs&#x3D;{“literal_binds”: True})</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="笔记" scheme="http://example.com/categories/python/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
